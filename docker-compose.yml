# Base docker-compose.yml

services:
  db:
    image: postgres:16.2-alpine
    container_name: shillers_db
    environment:
      POSTGRES_DB: ${DB_NAME:-shillers}
      POSTGRES_USER: ${DB_USER:-dev}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret_db_password_placeholder}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-dev} -d ${DB_NAME:-shillers}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4.3-alpine
    container_name: shillers_redis
    # Only expose Redis port in development
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: shillers_server
    build:
      context: ./server
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    volumes:
      - ./server:/app
      - media_volume:/app/media
    environment:
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
    # env_file directive removed; variables will be sourced from the shell environment for local dev
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    container_name: shillers_client
    build:
      context: ./client
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
      args:
        - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
        - NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=${NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID}
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
      - NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=${NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID}
    depends_on:
      - backend

  celery_worker:
    container_name: shillers_celery_worker
    build:
      context: ./server
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    command: >
      sh -c "
            sh /app/wait-for-migrations.sh &&
            /venv/bin/celery -A celery_config.app worker --loglevel=info"
    volumes:
      - ./server:/app
    environment:
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      DJANGO_SETTINGS_MODULE: app.settings
    # env_file directive removed; variables will be sourced from the shell environment for local dev
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    container_name: shillers_celery_beat
    build:
      context: ./server
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    command: >
      sh -c "
            sh /app/wait-for-migrations.sh &&
            /venv/bin/celery -A celery_config.app beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./server:/app
    environment:
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      DJANGO_SETTINGS_MODULE: app.settings
    # env_file directive removed; variables will be sourced from the shell environment for local dev
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  media_volume:
